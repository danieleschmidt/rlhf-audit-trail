apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlhf-audit-trail
  labels:
    app: rlhf-audit-trail
    component: api
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: rlhf-audit-trail
      component: api
  template:
    metadata:
      labels:
        app: rlhf-audit-trail
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: rlhf-audit-trail
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: rlhf-audit-trail:latest
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8501
          name: dashboard
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: secret-key
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-secret-key
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: encryption-key
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: audit-logs
          mountPath: /app/audit_logs
        - name: app-config
          mountPath: /app/config
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: audit-logs
        persistentVolumeClaim:
          claimName: audit-logs-pvc
      - name: app-config
        configMap:
          name: app-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rlhf-audit-trail
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rlhf-worker
  labels:
    app: rlhf-audit-trail
    component: worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rlhf-audit-trail
      component: worker
  template:
    metadata:
      labels:
        app: rlhf-audit-trail
        component: worker
    spec:
      serviceAccountName: rlhf-audit-trail
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: rlhf-audit-trail:latest
        command: ["celery", "-A", "rlhf_audit_trail.worker", "worker", "--loglevel=info"]
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: database-secret
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        envFrom:
        - configMapRef:
            name: app-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: app-data
          mountPath: /app/data
        - name: audit-logs
          mountPath: /app/audit_logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: app-data
        persistentVolumeClaim:
          claimName: app-data-pvc
      - name: audit-logs
        persistentVolumeClaim:
          claimName: audit-logs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: rlhf-audit-trail-service
  labels:
    app: rlhf-audit-trail
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8501
    targetPort: 8501
    protocol: TCP
    name: dashboard
  selector:
    app: rlhf-audit-trail
    component: api

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rlhf-audit-trail
  labels:
    app: rlhf-audit-trail

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  labels:
    app: rlhf-audit-trail
data:
  LOG_LEVEL: "INFO"
  PROMETHEUS_ENABLED: "true"
  COMPLIANCE_MODE: "eu_ai_act"
  PRIVACY_EPSILON_TOTAL: "5.0"
  PRIVACY_DELTA: "1e-6"
  AUDIT_LOG_RETENTION_DAYS: "2555"
  RATE_LIMIT_PER_MINUTE: "500"
  HEALTH_CHECK_TIMEOUT: "300"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-data-pvc
  labels:
    app: rlhf-audit-trail
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: audit-logs-pvc
  labels:
    app: rlhf-audit-trail
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd