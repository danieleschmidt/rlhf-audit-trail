name: Dependabot Auto-Approve

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  auto-approve:
    name: Auto-approve Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get PR details
      id: pr-details
      run: |
        echo "pr-title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
        echo "pr-user=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT

    - name: Check if security update
      id: security-check
      run: |
        if [[ "${{ steps.pr-details.outputs.pr-title }}" == *"security"* ]] || [[ "${{ steps.pr-details.outputs.pr-title }}" == *"CVE"* ]]; then
          echo "is-security=true" >> $GITHUB_OUTPUT
        else
          echo "is-security=false" >> $GITHUB_OUTPUT
        fi

    - name: Check update type
      id: update-type
      run: |
        if [[ "${{ steps.pr-details.outputs.pr-title }}" == *"patch"* ]]; then
          echo "update-type=patch" >> $GITHUB_OUTPUT
        elif [[ "${{ steps.pr-details.outputs.pr-title }}" == *"minor"* ]]; then
          echo "update-type=minor" >> $GITHUB_OUTPUT
        else
          echo "update-type=major" >> $GITHUB_OUTPUT
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies and run tests
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,testing]"
        
    - name: Run security checks
      id: security-scan
      run: |
        set +e
        bandit -r src/ -ll
        BANDIT_EXIT=$?
        
        safety check
        SAFETY_EXIT=$?
        
        if [ $BANDIT_EXIT -eq 0 ] && [ $SAFETY_EXIT -eq 0 ]; then
          echo "security-passed=true" >> $GITHUB_OUTPUT
        else
          echo "security-passed=false" >> $GITHUB_OUTPUT
        fi

    - name: Run quick tests
      id: test-run
      run: |
        set +e
        pytest tests/ -x --tb=short
        TEST_EXIT=$?
        
        if [ $TEST_EXIT -eq 0 ]; then
          echo "tests-passed=true" >> $GITHUB_OUTPUT
        else
          echo "tests-passed=false" >> $GITHUB_OUTPUT
        fi

    - name: Auto-approve security updates
      if: steps.security-check.outputs.is-security == 'true' && steps.security-scan.outputs.security-passed == 'true' && steps.test-run.outputs.tests-passed == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'APPROVE',
            body: '✅ Auto-approved security update after successful tests and security scans.'
          });

    - name: Auto-approve patch updates
      if: steps.update-type.outputs.update-type == 'patch' && steps.security-scan.outputs.security-passed == 'true' && steps.test-run.outputs.tests-passed == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.pulls.createReview({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            event: 'APPROVE',
            body: '✅ Auto-approved patch update after successful tests and security scans.'
          });

    - name: Comment on major updates
      if: steps.update-type.outputs.update-type == 'major'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '⚠️ Major version update detected. Manual review required before merging.\n\n**Security scan result:** ${{ steps.security-scan.outputs.security-passed }}\n**Tests result:** ${{ steps.test-run.outputs.tests-passed }}'
          });

    - name: Enable auto-merge for approved PRs
      if: (steps.security-check.outputs.is-security == 'true' || steps.update-type.outputs.update-type == 'patch') && steps.security-scan.outputs.security-passed == 'true' && steps.test-run.outputs.tests-passed == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.pulls.enableAutoMerge({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number,
            merge_method: 'squash'
          });