[tox]
envlist = py{310,311,312}, lint, mypy, security, docs, compliance
skip_missing_interpreters = true
isolated_build = true

[gh-actions]
python =
    3.10: py310
    3.11: py311
    3.12: py312

[testenv]
deps = 
    -r{toxinidir}/requirements.txt
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-asyncio>=0.21.0
    pytest-mock>=3.10.0
    hypothesis>=6.70.0
commands = 
    pytest {posargs:tests} --cov=src --cov-report=term-missing --cov-report=xml

[testenv:lint]
deps = 
    ruff>=0.3.0
    black>=23.0.0
    isort>=5.12.0
commands = 
    ruff check src tests
    black --check src tests
    isort --check-only src tests

[testenv:mypy]
deps = 
    mypy>=1.8.0
    types-requests
    types-redis
    types-PyYAML
commands = 
    mypy src

[testenv:security]
deps = 
    bandit[toml]>=1.7.0
    safety>=3.0.0
    detect-secrets>=1.4.0
commands = 
    bandit -r src/ -ll
    safety check
    detect-secrets scan --baseline .secrets.baseline

[testenv:docs]
deps = 
    sphinx>=6.0.0
    sphinx-rtd-theme>=1.2.0
    sphinx-autodoc-typehints>=1.23.0
    myst-parser>=2.0.0
commands = 
    sphinx-build -W -b html docs docs/_build/html

[testenv:compliance]
deps = 
    {[testenv]deps}
    jsonschema>=4.0.0
commands = 
    pytest tests/ -m compliance -v
    python -m rlhf_audit_trail.compliance.verify

[testenv:integration]
deps = 
    {[testenv]deps}
    docker>=6.0.0
commands = 
    pytest tests/ -m integration -v --timeout=300

[testenv:benchmark]
deps = 
    {[testenv]deps}
    pytest-benchmark>=4.0.0
    memory-profiler>=0.60.0
commands = 
    pytest benchmarks/ --benchmark-only

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml